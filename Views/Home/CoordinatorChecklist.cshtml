@{
    ViewData["Title"] = "Task Management Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management</title>
    <link rel="stylesheet" href="../wwwroot/css/site.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .status-dot {
            height: 15px;
            width: 15px;
            border-radius: 50%;
            display: inline-block;
            position: absolute;
            left: 10px; /* Align dot to the far left of the cell */
            top: 50%; /* Align dot vertically */
            transform: translateY(-50%);
        }

        .task-name {
    display: inline-block;
    margin-left: 25px; /* Adjust this value to align the text after the dot */
    font-weight: bold; /* If you want the text to be bold */
}

            .status-dot.not-started {
                background-color: red;
            }

            .status-dot.in-progress {
                background-color: orange;
            }

            .status-dot.completed {
                background-color: green;
            }

        .task-text {
            padding-left: 100px; /* Adjust this value to fit the dot */
        }

        .delete-btn {
            border: none;
            background: transparent;
            cursor: pointer;
            color: #888;
            position: absolute;
            right: 0;
        }

            .delete-btn:hover {
                color: #555;
            }

        .task-item {
            position: relative;
            padding-right: 30px; /* Ensure space for the delete icon */
        }
    </style>
</head>
<body>
    <vc:nav-bar-types user="Coordinator"></vc:nav-bar-types>
    <div>
        <h2>Task Manager</h2>
    </div>
    <div>
        <div>
            <select id="status-filter" class="form-control">
                <option value="all">Filter by</option>
                <option value="not-started">Not started</option>
                <option value="in-progress">In progress, incomplete</option>
                <option value="completed">Completed</option>
            </select>

        </div>
        <br />

        <div>

            <table class="task-table" style="margin-left: auto; margin-right: auto;">
                <thead>
                    <tr>
                        <th>Task</th>
                    </tr>
                </thead>
                <tbody id="task-list">

                    <!-- Task rows will be added here dynamically -->
                </tbody>
                <tfoot>
                    <tr id="new-task-row">
                        <td>
                            <div class="new-task-container">
                                <input type="text" id="new-task-input" class="form-control" placeholder="+ Add New Task" onkeypress="handleEnterKeyPress(event)" />
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <script>
        let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

        document.getElementById('status-filter').addEventListener('change', function () {
            renderTasks(this.value);
        });

        function saveTasks() {
            localStorage.setItem('tasks', JSON.stringify(tasks));
            renderTasks();
        }

        function renderTasks(filter = 'all') {
            const taskList = document.getElementById('task-list');
            taskList.innerHTML = ' ';
            tasks.filter(task => filter === 'all' || task.status === filter).forEach((task, index) => {
                const row = taskList.insertRow();
                row.className = `task-item ${task.status}`;
                const cell = row.insertCell(0);
                cell.innerHTML = `
                            <span class="status-dot ${task.status}" onclick="changeStatus(${index})"></span>
                            <span class="task-name"> ${task.name}</span>
                            <button class="delete-btn" onclick="deleteTask(${index})"><i class="fas fa-trash"></i></button>
                        `;
            });
            if (tasks.length === 0 && filter === 'all') {
                const row = taskList.insertRow();
                const cell = row.insertCell(0);
                cell.textContent = 'No tasks found';
                cell.className = 'no-tasks';
            }
        }

        function changeStatus(index) {
            const task = tasks[index];
            if (task.status === 'not-started') {
                task.status = 'in-progress';
            } else if (task.status === 'in-progress') {
                task.status = 'completed';
            } else {
                task.status = 'not-started';
            }
            saveTasks();
        }

        function deleteTask(index) {
            tasks.splice(index, 1);
            saveTasks();
        }

        function addTask() {
            const newTaskInput = document.getElementById('new-task-input');
            const taskName = newTaskInput.value.trim();
            if (taskName) {
                tasks.push({ name: taskName, status: 'not-started' });
                saveTasks();
                newTaskInput.value = '';
            }
        }

        function handleEnterKeyPress(event) {
            if (event.key === 'Enter') {
                addTask();
            }
        }

        renderTasks();
    </script>
</body>
</html>
