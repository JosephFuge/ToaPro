// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToaPro.Models;

#nullable disable

namespace ToaPro.Migrations
{
    [DbContext(typeof(IntexContext))]
    partial class IntexContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_catalog", "adminpack");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JudgePresentation", b =>
                {
                    b.Property<int>("JudgeId")
                        .HasColumnType("integer")
                        .HasColumnName("judge_id");

                    b.Property<int>("PresentationId")
                        .HasColumnType("integer")
                        .HasColumnName("presentation_id");

                    b.HasKey("JudgeId", "PresentationId")
                        .HasName("judge_presentations_pk");

                    b.HasIndex("PresentationId");

                    b.ToTable("judge_presentations", (string)null);
                });

            modelBuilder.Entity("SemesterClass", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("integer")
                        .HasColumnName("class_id");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer")
                        .HasColumnName("semester_id");

                    b.HasKey("ClassId", "SemesterId")
                        .HasName("semester_classes_pk");

                    b.HasIndex("SemesterId");

                    b.ToTable("semester_classes", (string)null);
                });

            modelBuilder.Entity("SemesterGrader", b =>
                {
                    b.Property<int>("GraderId")
                        .HasColumnType("integer")
                        .HasColumnName("grader_id");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer")
                        .HasColumnName("semester_id");

                    b.HasKey("GraderId", "SemesterId")
                        .HasName("semester_graders_pk");

                    b.HasIndex("SemesterId");

                    b.ToTable("semester_graders", (string)null);
                });

            modelBuilder.Entity("StudentGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.HasKey("GroupId", "StudentId")
                        .HasName("student_groups_pk");

                    b.HasIndex("StudentId");

                    b.ToTable("student_groups", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("class_pk");

                    b.HasIndex(new[] { "Code" }, "uniq_code")
                        .IsUnique();

                    b.ToTable("classes", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("GraderId")
                        .HasColumnType("integer")
                        .HasColumnName("grader_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<float?>("Points")
                        .HasColumnType("real")
                        .HasColumnName("points");

                    b.Property<int>("RequirementId")
                        .HasColumnType("integer")
                        .HasColumnName("requirement_id");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer")
                        .HasColumnName("submission_id");

                    b.HasKey("Id")
                        .HasName("grade_pk");

                    b.HasIndex("GraderId");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubmissionId");

                    b.HasIndex(new[] { "RequirementId", "GraderId", "GroupId", "SubmissionId" }, "uniq_grade")
                        .IsUnique();

                    b.ToTable("grades", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Grader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("integer")
                        .HasColumnName("class_id");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("f_name");

                    b.Property<bool>("IsProfessor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_professor");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("l_name");

                    b.Property<string>("NetId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("net_id");

                    b.HasKey("Id")
                        .HasName("grader_pk");

                    b.HasIndex("ClassId");

                    b.HasIndex(new[] { "FName", "LName", "NetId", "ClassId" }, "uniq_grader")
                        .IsUnique();

                    b.ToTable("graders", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<short>("Number")
                        .HasColumnType("smallint")
                        .HasColumnName("number");

                    b.Property<short>("Section")
                        .HasColumnType("smallint")
                        .HasColumnName("section");

                    b.Property<int>("SemesterId")
                        .HasColumnType("integer")
                        .HasColumnName("semester_id");

                    b.HasKey("Id")
                        .HasName("group_pk");

                    b.HasIndex(new[] { "SemesterId", "Section", "Number" }, "uniq_group")
                        .IsUnique();

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Judge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Affiliation")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("affiliation");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("f_name");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("l_name");

                    b.HasKey("Id")
                        .HasName("judge_pk");

                    b.HasIndex(new[] { "FName", "LName", "Affiliation" }, "uniq_judge")
                        .IsUnique();

                    b.ToTable("judges", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Presentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("location");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("presentation_pk");

                    b.HasIndex(new[] { "GroupId", "Location", "StartDate" }, "uniq_presentation")
                        .IsUnique();

                    b.ToTable("presentations", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("JudgeId")
                        .HasColumnType("integer")
                        .HasColumnName("judge_id");

                    b.Property<string>("Nomination")
                        .HasColumnType("text")
                        .HasColumnName("nomination");

                    b.Property<float?>("Points")
                        .HasColumnType("real")
                        .HasColumnName("points");

                    b.Property<int?>("Ranking1")
                        .HasColumnType("integer")
                        .HasColumnName("ranking");

                    b.HasKey("Id")
                        .HasName("ranking_pk");

                    b.HasIndex("JudgeId");

                    b.HasIndex(new[] { "GroupId", "JudgeId" }, "uniq_ranking")
                        .IsUnique();

                    b.ToTable("rankings", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("integer")
                        .HasColumnName("class_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<float>("Points")
                        .HasColumnType("real")
                        .HasColumnName("points");

                    b.HasKey("Id")
                        .HasName("requirement_pk");

                    b.HasIndex(new[] { "ClassId", "Description" }, "uniq_requirement")
                        .IsUnique();

                    b.ToTable("requirements", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("term");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("semester_pk");

                    b.HasIndex(new[] { "Term" }, "uniq_term")
                        .IsUnique();

                    b.ToTable("semesters", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("f_name");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)")
                        .HasColumnName("l_name");

                    b.Property<string>("NetId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("net_id");

                    b.HasKey("Id")
                        .HasName("student_pk");

                    b.HasIndex(new[] { "FName", "LName", "NetId" }, "uniq_student")
                        .IsUnique();

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("ToaPro.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("GithubLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<string>("UploadFile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("YoutubeLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("submission_pk");

                    b.HasIndex("StudentId");

                    b.HasIndex(new[] { "GroupId", "StudentId", "CreatedDate" }, "uniq_submission")
                        .IsUnique();

                    b.ToTable("submissions", (string)null);
                });

            modelBuilder.Entity("JudgePresentation", b =>
                {
                    b.HasOne("ToaPro.Models.Judge", null)
                        .WithMany()
                        .HasForeignKey("JudgeId")
                        .IsRequired()
                        .HasConstraintName("judge_fk");

                    b.HasOne("ToaPro.Models.Presentation", null)
                        .WithMany()
                        .HasForeignKey("PresentationId")
                        .IsRequired()
                        .HasConstraintName("presentation_fk");
                });

            modelBuilder.Entity("SemesterClass", b =>
                {
                    b.HasOne("ToaPro.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("class_fk");

                    b.HasOne("ToaPro.Models.Semester", null)
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("semester_fk");
                });

            modelBuilder.Entity("SemesterGrader", b =>
                {
                    b.HasOne("ToaPro.Models.Grader", null)
                        .WithMany()
                        .HasForeignKey("GraderId")
                        .IsRequired()
                        .HasConstraintName("grader_fk");

                    b.HasOne("ToaPro.Models.Semester", null)
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("semester_fk");
                });

            modelBuilder.Entity("StudentGroup", b =>
                {
                    b.HasOne("ToaPro.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("group_fk");

                    b.HasOne("ToaPro.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("student_fk");
                });

            modelBuilder.Entity("ToaPro.Models.Grade", b =>
                {
                    b.HasOne("ToaPro.Models.Grader", "Grader")
                        .WithMany("Grades")
                        .HasForeignKey("GraderId")
                        .IsRequired()
                        .HasConstraintName("grader_fk");

                    b.HasOne("ToaPro.Models.Group", "Group")
                        .WithMany("Grades")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("group_fk");

                    b.HasOne("ToaPro.Models.Requirement", "Requirement")
                        .WithMany("Grades")
                        .HasForeignKey("RequirementId")
                        .IsRequired()
                        .HasConstraintName("requirement_fk");

                    b.HasOne("ToaPro.Models.Submission", "Submission")
                        .WithMany("Grades")
                        .HasForeignKey("SubmissionId")
                        .IsRequired()
                        .HasConstraintName("submission_fk");

                    b.Navigation("Grader");

                    b.Navigation("Group");

                    b.Navigation("Requirement");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("ToaPro.Models.Grader", b =>
                {
                    b.HasOne("ToaPro.Models.Class", "Class")
                        .WithMany("Graders")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("class_fk");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ToaPro.Models.Group", b =>
                {
                    b.HasOne("ToaPro.Models.Semester", "Semester")
                        .WithMany("Groups")
                        .HasForeignKey("SemesterId")
                        .IsRequired()
                        .HasConstraintName("semester_fk");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("ToaPro.Models.Presentation", b =>
                {
                    b.HasOne("ToaPro.Models.Group", "Group")
                        .WithMany("Presentations")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("group_fk");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("ToaPro.Models.Ranking", b =>
                {
                    b.HasOne("ToaPro.Models.Group", "Group")
                        .WithMany("Rankings")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("group_fk");

                    b.HasOne("ToaPro.Models.Judge", "Judge")
                        .WithMany("Rankings")
                        .HasForeignKey("JudgeId")
                        .IsRequired()
                        .HasConstraintName("judge_fk");

                    b.Navigation("Group");

                    b.Navigation("Judge");
                });

            modelBuilder.Entity("ToaPro.Models.Requirement", b =>
                {
                    b.HasOne("ToaPro.Models.Class", "Class")
                        .WithMany("Requirements")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("class_fk");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("ToaPro.Models.Submission", b =>
                {
                    b.HasOne("ToaPro.Models.Group", "Group")
                        .WithMany("Submissions")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("group_fk");

                    b.HasOne("ToaPro.Models.Student", "Student")
                        .WithMany("Submissions")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("student_fk");

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ToaPro.Models.Class", b =>
                {
                    b.Navigation("Graders");

                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("ToaPro.Models.Grader", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ToaPro.Models.Group", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("Presentations");

                    b.Navigation("Rankings");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("ToaPro.Models.Judge", b =>
                {
                    b.Navigation("Rankings");
                });

            modelBuilder.Entity("ToaPro.Models.Requirement", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("ToaPro.Models.Semester", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("ToaPro.Models.Student", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("ToaPro.Models.Submission", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
